/*
  Proof of concept: brainfuck interpreter written in brainfix.
  Can only handle BF code under 250 characters long and a tape 
  of at most 250 cells. This is very very slow, but it works.

  Demo: Hello World (BF sample from wikipedia)

  $ bfx bfint.bfx interpreter.bf                      # compile this bfx file to bfint.bf
  $ echo "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++." > hello.bf
  $ cat hello.bf | ./bfint 1000 interpreter.bf        # Run
    Hello World!
*/

include "std/io.bfx"
include "std/bool.bfx"

const MAX_SIZE = 250;

global [MAX_SIZE] bf_tape;
global [MAX_SIZE] bf_code;
global [MAX_SIZE] jmp_stack;
global tape_pointer, stack_pointer;

function main()
{
    programSize = load();
    run(programSize);
}

function init()
{
    bf_tape = 0;
    pointer = 0;
}

function count = load()
{
    count = 0;
    running = true;
    while (running && count < MAX_SIZE)
    {
        c = scanc();
        if (c == '\n')
            running = false;
        else
            bf_code[count++] = c;
    }
}

function run(programSize)
{
    i = 0;
    while (i < programSize)
    {
        op = bf_code[i];
        if (op == '>')
        {
            ++tape_pointer;
        }
        else if (op == '<')
        {
            --tape_pointer;
        }
        else if (op == '[')
        {
            if (bf_tape[tape_pointer])
                jmp_stack[stack_pointer++] = i;
            else
                skipToClosing(i);
        }
        else if (op == ']')
        {
            if (bf_tape[tape_pointer])
                i = jmp_stack[stack_pointer - 1];
            else
                jmp_stack[stack_pointer--];
        }
        else if (op == '+')
        {
            ++bf_tape[tape_pointer];
        }
        else if (op == '-')
        {
            --bf_tape[tape_pointer];
        }
        else if (op == '.')
        {
            printc(bf_tape[tape_pointer]);
        }
        else if (op == ',')
        {
            bf_tape[tape_pointer] = scanc(); 
        }

        ++i;
    }
}
        
function skipToClosing(&idx)
{
    count = 1;
    while (count > 0)
    {
        op = bf_code[++idx];
        if (op == '[')
            ++count;
        else if (op == ']')
            --count;
    }
}
