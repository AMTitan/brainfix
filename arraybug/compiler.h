// Generated by Bisonc++ V6.03.00 on Mon, 07 Feb 2022 12:21:33 +0100

#ifndef Compiler_h_included
#define Compiler_h_included

// $insert baseclass
#include "compilerbase.h"
// $insert scanner.h
#include "scanner.h"


#undef Compiler
// CAVEAT: between the baseclass-include directive and the 
// #undef directive in the previous line references to Compiler 
// are read as CompilerBase.
// If you need to include additional headers in this file 
// you should do so after these comment-lines.


class Compiler: public CompilerBase
{
    // $insert scannerobject
    Scanner d_scanner;
        
public:
    Compiler(std::istream &in):
        d_scanner(in)
    {}
    
    int parse();

private:
    void error();                   // called on (syntax) errors
    int lex();                      // returns the next token from the
    // lexical scanner. 
    void print();                   // use, e.g., d_token, d_loc
    void exceptionHandler(std::exception const &exc);

    // support functions for parse():
    void executeAction_(int ruleNr);
    void errorRecovery_();
    void nextCycle_();
    void nextToken_();
    void print_();
};


#endif
